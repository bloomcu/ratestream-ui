@import 'node_modules/codyhouse-framework/main/assets/css/base';
@import 'base/app';
@import 'base/elements';
@import 'base/components';

/* --------------------------------

Title: Utility Classes
Descr: Utility classes

-------------------------------- */
.width-fit {
  width: fit-content;
}

/* --------------------------------

Title: App Utility Classes
Descr: App-wide utility classes

-------------------------------- */
.app-disabled {
  pointer-events: none;
  opacity: .5;
}

.app-lock-scroll {
    overflow: hidden;
}

.app-scrollable {
    overflow: auto;
    -ms-overflow-style: none; // IE and Edge
    scrollbar-width: none; // Firefox

    &::-webkit-scrollbar {
        display: none; // Chrome, Safari and Opera
    }
}

/* --------------------------------

Title: Button radio group

-------------------------------- */
.btns--radio, .btns--checkbox {
  > * {
    position: relative;
  }

  input[type="radio"],
  input[type="checkbox"] {
    /* hide native buttons */
    position: absolute;
    left: 0;
    top: 0;
    margin: 0;
    padding: 0;
    opacity: 0;
    height: 0;
    width: 0;
    pointer-events: none;
  }

  input[type="radio"] + label,
  input[type="checkbox"] + label {
    user-select: none;
  }

  input[type="radio"]:focus + label,
  input[type="checkbox"]:focus + label {
    z-index: 1;
  }

  input[type="radio"]:checked + label,
  input[type="checkbox"]:checked + label {
    background-color: var(--color-primary);
    color: var(--color-bg);
    box-shadow: var(--shadow-sm);
  }
}

.btns__btn--icon {
  padding: var(--btns-button-padding-y);

  .icon {
    display: block;
  }
}

/* --------------------------------

TODO: Do we need this?
Title: Action icon

-------------------------------- */
.app-action-icon {
    position: relative;
    display: inline-block;
    display: flex;
    align-items: center;
    justify-content: center;
    height: 40px;
    width: 40px;
    border-radius: 50%;
    
    transition: 0.2s;
    cursor: pointer;

    &:hover {
        background-color: alpha(var(--color-contrast-higher), 0.08);
    }

    .icon {
        width: 18px;
        height: 18px;
    }
}

/* -------------------------------- 

TODO: Do we need this?
Title: Radios and Checkboxes
Descr: Custom radio and checkbox buttons

-------------------------------- */
:root {
  /* radios + checkboxes */
  --checkbox-radio-size: 18px;
  --checkbox-radio-gap: var(--space-xxs); /* gap between button and label */
  --checkbox-radio-border-width: 1px;
  --checkbox-radio-line-height: var(--body-line-height);

  /* radios */
  --radio-marker-size: 8px;

  /* checkboxes */
  --checkbox-marker-size: 12px;
  --checkbox-radius: 4px;
}

/* hide native buttons */
.radio,
.checkbox {
  position: absolute;
  padding: 0;
  margin: 0;
  margin-top: calc((1em * var(--checkbox-radio-line-height) - var(--checkbox-radio-size)) / 2);
  opacity: 0;
  height: var(--checkbox-radio-size);
  width: var(--checkbox-radio-size);
  pointer-events: none;
}

/* label */
.radio + label,
.checkbox + label { 
  display: inline-block;
  line-height: var(--checkbox-radio-line-height);
  user-select: none;
  cursor: pointer;
  padding-left: calc(var(--checkbox-radio-size) + var(--checkbox-radio-gap));
}

/* custom inputs - basic style */
.radio + label::before,
.checkbox + label::before { 
  content: '';
  box-sizing: border-box;
  display: inline-block;
  position: relative;
  vertical-align: middle;
  top: -0.1em;
  margin-left: calc(-1 * (var(--checkbox-radio-size) + var(--checkbox-radio-gap)));
  flex-shrink: 0;
  width: var(--checkbox-radio-size);
  height: var(--checkbox-radio-size);
  background-color: var(--color-bg);
  border-width: var(--checkbox-radio-border-width);
  border-color: alpha(var(--color-contrast-low), 0.65);
  border-style: solid;
  box-shadow: var(--shadow-xs);
  background-repeat: no-repeat;
  background-position: center;
  margin-right: var(--checkbox-radio-gap);
  transition: transform .2s, border .2s;
}

/* :hover */
.radio:not(:checked):not(:focus) + label:hover::before,
.checkbox:not(:checked):not(:focus) + label:hover::before {
  border-color: alpha(var(--color-contrast-low), 1);
}

/* radio only style */
.radio + label::before {
  border-radius: 50%; 
}

/* checkbox only style */
.checkbox + label::before {
  border-radius: var(--checkbox-radius);
}

/* :checked */
.radio:checked + label::before,
.checkbox:checked + label::before {
  background-color: var(--color-primary);
  box-shadow: var(--shadow-xs);
  border-color: var(--color-primary);
  transition: transform .2s;
}

/* :active */
.radio:active + label::before,
.checkbox:active + label::before {
  transform: scale(0.8);
  transition: transform .2s;
}

/* :checked:active */
.radio:checked:active + label::before,
.checkbox:checked:active + label::before {
  transform: none;
  transition: none;
}

/* radio button icon */
.radio:checked + label::before {
  background-image: url("data:image/svg+xml;charset=utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3E%3Cg class='nc-icon-wrapper' fill='%23ffffff'%3E%3Ccircle cx='8' cy='8' r='8' fill='%23ffffff'%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
  background-size: var(--radio-marker-size);
}

/* checkbox button icon */
.checkbox:checked + label::before {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 12 12'%3E%3Cpolyline points='1 6.5 4 9.5 11 2.5' fill='none' stroke='%23FFFFFF' stroke-linecap='round' stroke-linejoin='round' stroke-width='2'/%3E%3C/svg%3E");
  background-size: var(--checkbox-marker-size);
}

/* :focus */
.radio:checked:active + label::before,
.checkbox:checked:active + label::before,
.radio:focus + label::before,
.checkbox:focus + label::before {
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px alpha(var(--color-primary), 0.2);
}

/* --radio--bg, --checkbox--bg -> variation with background color */
.radio--bg + label, .checkbox--bg + label {
  padding: var(--space-xxxxs) var(--space-xxxs);
  padding-left: calc(var(--checkbox-radio-size) + var(--checkbox-radio-gap) + var(--space-xxxs));
  border-radius: var(--radius-md);
  transition: background .2s;
}

.radio--bg + label:hover, .checkbox--bg + label:hover {
  background-color: alpha(var(--color-contrast-higher), 0.075);
}

.radio--bg:active + label,
.checkbox--bg:active + label,
.radio--bg:focus + label,
.checkbox--bg:focus + label {
  background-color: alpha(var(--color-primary), 0.1);
}

/* --------------------------------

Title: Cards

-------------------------------- */
.card {
  display: block;
  background-color: var(--color-white);
  border: 1px solid var(--color-contrast-lower);
  border-radius: var(--radius-lg);
  padding: calc(var(--space-sm) + 5px);
  text-decoration: none;
  color: inherit;
  
  &--shadow {
    box-shadow: var(--shadow-sm);
  }

  &--dark {
    border: none;
    background-color: var(--color-bg-dark);
  }
}

.card--is-link {
  box-shadow: var(--shadow-sm);
  will-change: box-shadow;
  transition: box-shadow 0.2s;
  cursor: pointer;
  
  &:hover {
    box-shadow: var(--shadow-md);

    .card-img::after {
      opacity: 1;
    }
  }

  .card-img {
    position: relative;

    &::after { // overlay layer
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: alpha(var(--color-black), 0.2);
      border-radius: var(--space-xxs) var(--space-xxs) 0 0;
      opacity: 0;
      transition: opacity 0.2s;
    }
  }
}

.card-img {
  figure {
    object-fit: fill;
    width: 100%;
    height: 180px;
    border-radius: var(--space-xxs) var(--space-xxs) 0 0;
  }
}

.card-content {
  padding: var(--space-xs) 0 0 0;
  
  // &__header {
  //   height: 80px;
  // }
}

.card-link {
  text-decoration: none;
  display: block;
  color: inherit;
}

.card-link__icon {
  position: absolute;
  z-index: 1;
  top: 14px;
  right: 14px;
  display: flex;
  align-items: center;
  justify-content: center;

  opacity: 0;
  transition: opacity 0.2s;

  .icon {
    display: block;
    width: 28px;
    height: 28px;
    color: var(--color-white); // icon color
  }
}

.card--is-link:hover .card-link__icon {
  opacity: 1;
}

/* --------------------------------

TODO: Do we need this?
Title: Tables

-------------------------------- */
// >>> style affecting all (block + expanded) versions üëá
.table {
  position: relative;
  z-index: 1;
}
// <<< end style affecting all versions

// >>> block version only (mobile) üëá
.table:not(.table--expanded) {
  border-collapse: separate;
  border-spacing: 0 var(--space-md); // row gap
  margin-top: calc(-2 * var(--space-md)); // set spacing variable = row gap ‚òùÔ∏è

  .table__header { // hide table header - but keep it accessible to SR
    @include srHide;
  }

  .table__row {
    .table__cell:first-child {
      border-radius: var(--radius-md) var(--radius-md) 0 0;
    }
  
    .table__cell:last-child {
      border-radius: 0 0 var(--radius-md) var(--radius-md);
      
      &::after { // hide border bottom
        display: none;
      }
    }
  }

  .table__cell {
    position: relative;
    display: flex;
    justify-content: space-between;
    width: 100%;
    text-align: right;
    padding: var(--space-md);
    background-color: var(--color-bg-light);

    &::after { // border bottom
      content: '';
      position: absolute;
      bottom: 0;
      left: var(--space-md);
      width: calc(100% - (2 * var(--space-md)));
      height: 1px;
      background-color: var(--color-contrast-lower);
    }
  }
}
// <<< end block version

// >>> expanded version only (desktop) üëá -> show standard rows and cols
.table--expanded {
  .table__header {
    .table__cell { // header cell style
      position: relative;
      z-index: 10;
      background-color: var(--color-bg);
      border-bottom: 1px solid var(--color-contrast-lower); // header border bottom
      font-size: var(--text-sm);
      color: var(--color-contrast-higher);
    }
  }
  
  .table__row {
    border-bottom: 1px solid var(--color-contrast-lower);
    
    &:last-child {
      border-bottom: none;
    }
  }
  
  .table__cell {
    padding: calc(var(--space-sm) + 7px) var(--space-sm);
  }

  // --header-sticky
  .table__header--sticky {
    .table__cell { // header cell style
      position: sticky;
      top: 0;
    }
  }
}
// <<< end expanded version

@each $breakpoint, $value in $breakpoints {
  .table--expanded\@#{$breakpoint}::before {
    content: 'collapsed';
    @include breakpoint(#{$breakpoint}) {
      content: 'expanded';
    }
  }
}

/* --------------------------------

Title: Skeleton Loaders

-------------------------------- */
:root {
  // all
  --ske-animation-duration: 1s;

  // rectangle + text
  --ske-radius: var(--radius-lg);
}

.ske {
  position: relative;
  background-color: alpha(var(--color-contrast-medium), 0.1);
  overflow: hidden;

  &::after { // animated background effect
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, alpha(var(--color-contrast-medium), 0), alpha(var(--color-contrast-medium), 0.1), alpha(var(--color-contrast-medium), 0));
    background-repeat: no-repeat;
    background-size: 500px 100%;
    background-position: -500px 0;
    will-change: background-position;
    animation: ske-background var(--ske-animation-duration) infinite; 
  }
}

// --circle
.ske--circle {
  height: 0;
  padding-bottom: 100%;
  border-radius: 50%;
  clip-path: circle(50% at 50% 50%);
}

// --rectangle
[class*="ske--rect-"], 
.ske--rect, 
.ske--square {
  border-radius: var(--ske-radius);
  clip-path: inset(0% 0% 0% 0% round var(--ske-radius));
  height: 0;
  padding-bottom: calc(100%/(var(--ske-aspect-ratio)));
}

.ske--rect-16\:9 {
  --ske-aspect-ratio: 16/9;
}

.ske--rect-4\:3 {
  --ske-aspect-ratio: 4/3;
}

.ske--square, .ske--rect-1\:1 {
  --ske-aspect-ratio: 1/1;
}

.ske--text,
.ske--heading,
.ske--heading-lg {
  border-radius: var(--ske-radius);
  clip-path: inset(0% 0% 0% 0% round var(--ske-radius));
}

.ske--text {
  height: 1em;
}

.ske--heading {
  height: 2.5em;
}

.ske--heading-lg {
  height: 4em;
}

@keyframes ske-background {
  from {
    background-position: -500px 0;
  }

  to {
    background-position: calc(100% + 500px) 0;
  }
}

/* --------------------------------

Title: Lists

-------------------------------- */
:root {
  --list-space-y: 0.375em; // vertical gaps
  --list-offset: 1em;  // sublist horizontal offset
  --list-line-height-multiplier: 1; // line-height multiplier
}

.list, .text-component .list {
  padding-left: 0;
  list-style: none;

  ul, ol {
    list-style: none;
    margin: 0; // reset
    margin-top: calc((var(--list-space-y) / 2) * var(--text-space-y-multiplier, 1));
    padding-top: calc((var(--list-space-y) / 2) * var(--text-space-y-multiplier, 1));
    padding-left: var(--list-offset);
  }

  li {
    padding-bottom: calc((var(--list-space-y) / 2) * var(--text-space-y-multiplier, 1));
    margin-bottom: calc((var(--list-space-y) / 2) * var(--text-space-y-multiplier, 1));
    line-height: calc(var(--body-line-height) * var(--list-line-height-multiplier));
  }

  > li:last-child, ul > li:last-child, ol > li:last-child {
    margin-bottom: 0;
  }

  &:not(.list--border) > li:last-child, ul > li:last-child, ol > li:last-child {
    padding-bottom: 0;
  }
}

/* #region (ul + ol) */
.list--ul, .text-component .list--ul, 
.list--ol, .text-component .list--ol {
  --list-offset: calc(var(--list-bullet-size) + var(--list-bullet-margin-right));

  ul, ol {
    padding-left: 0;
  }

  li {
    @supports (--css: variables) {
      padding-left: var(--list-offset) !important;
    }
  }

  li::before {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    vertical-align: middle;
    position: relative;
    top: -0.1em;
    
    @supports (--css: variables) {
      width: var(--list-bullet-size) !important; 
      height: var(--list-bullet-size) !important;
      margin-left: calc(var(--list-bullet-size) * -1) !important;
      left: calc(var(--list-bullet-margin-right) * -1) !important;
    }
  }
}

// unordered list
.list--ul, .text-component .list--ul { 
  --list-bullet-size: 7px; // dot width and height
  --list-bullet-margin-right: 12px; // gap between bullet and content

  > li {
    padding-left: 19px; // IE fallback
  }

  > li::before { // bullet
    content: '';
    border-radius: 50%;
    color: var(--color-contrast-high); // bullet color
    background-color: currentColor;

    // IE fallback
    width: 7px;
    height: 7px;
    margin-left: -7px;
    left: -12px;
    // end - IE fallback
  }

  ul li::before {
    background-color: transparent;
    box-shadow: inset 0 0 0 2px currentColor;
  }
}

// ordered list
.list--ol, .text-component .list--ol { 
  --list-bullet-size: 26px; // ‚ö†Ô∏è use px or rem units - circle width and height
  --list-bullet-margin-right: 6px; // ‚ö†Ô∏è use px or rem units - gap between circle and content
  --list-bullet-font-size: 14px; // ‚ö†Ô∏è use px or rem units - bullet font size
  counter-reset: list-items;

  > li {
    counter-increment: list-items;
    padding-left: 32px; // IE fallback
  }

  ol {
    counter-reset: list-items;
  }

  > li::before {
    content: counter(list-items);
    font-size: var(--list-bullet-font-size, 14px);
    background-color: alpha(var(--color-primary), 0.2);
    color: var(--color-contrast-high);
    line-height: 1;
    border-radius: 50%;

    // IE fallback
    width: 26px;
    height: 26px;
    margin-left: -26px;
    left: -6px;
    // end - IE fallback
  }

  ol > li::before {
    background-color: transparent;
    box-shadow: inset 0 0 0 2px alpha(var(--color-primary), 0.2);
  }
}
/* #endregion */

/* #region (border) */
.list--border, .text-component .list--border { // show border divider among list items
  li:not(:last-child) {
    border-bottom: 1px solid var(--color-contrast-lower);
  }

  ul, ol {
    border-top: 1px solid var(--color-contrast-lower);
  }
}
/* #endregion */

/* #region (icons) */
.list--icons, .text-component .list--icons { // use icons as bullet points
  --list-bullet-size: 24px;
  --list-bullet-margin-right: 8px; // gap between icon and text
  --list-offset: calc(var(--list-bullet-size) + var(--list-bullet-margin-right));

  ul, ol {
    padding-left: 32px; // IE fallback

    @supports (--css: variables) {
      padding-left: var(--list-offset);
    }
  }
}

.list__icon {
  position: relative;

  // IE fallback
  width: 24px;
  height: 24px;
  margin-right: 8px;

  &:not(.top-0) {
    top: calc((1em * var(--body-line-height) - 24px) / 2);
  }
  // end - IE fallback

  @supports (--css: variables) {
    width: var(--list-bullet-size);
    height: var(--list-bullet-size);
    margin-right: var(--list-bullet-margin-right);

    &:not(.top-0) {
      top: calc((1em * var(--body-line-height) * var(--list-line-height-multiplier) - var(--list-bullet-size)) / 2);
    }
  }
}
/* #endregion */
